"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Room = void 0;
const roomCreate_js_1 = require("../funcs/roomCreate.js");
const roomCreateUser_js_1 = require("../funcs/roomCreateUser.js");
const roomDelete_js_1 = require("../funcs/roomDelete.js");
const roomDeleteUser_js_1 = require("../funcs/roomDeleteUser.js");
const roomGet_js_1 = require("../funcs/roomGet.js");
const roomGetUser_js_1 = require("../funcs/roomGetUser.js");
const roomStartEgress_js_1 = require("../funcs/roomStartEgress.js");
const roomStopEgress_js_1 = require("../funcs/roomStopEgress.js");
const roomUpdateUser_js_1 = require("../funcs/roomUpdateUser.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Room extends sdks_js_1.ClientSDK {
    /**
     * Create a room
     *
     * @remarks
     * Create a multiparticipant livestreaming room.
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async create(options) {
        return (0, fp_js_1.unwrapAsync)((0, roomCreate_js_1.roomCreate)(this, options));
    }
    /**
     * Retrieve a room
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async get(id, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomGet_js_1.roomGet)(this, id, options));
    }
    /**
     * Delete a room
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async delete(id, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomDelete_js_1.roomDelete)(this, id, options));
    }
    /**
     * Start room RTMP egress
     *
     * @remarks
     * Create a livestream for your room.
     * This allows you to leverage livestreaming features like recording and HLS output.
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async startEgress(id, roomEgressPayload, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomStartEgress_js_1.roomStartEgress)(this, id, roomEgressPayload, options));
    }
    /**
     * Stop room RTMP egress
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async stopEgress(id, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomStopEgress_js_1.roomStopEgress)(this, id, options));
    }
    /**
     * Create a room user
     *
     * @remarks
     * Call this endpoint to add a user to a room, specifying a display name at a minimum.
     * The response will contain a joining URL for Livepeer's default meeting app.
     * Alternatively the joining token can be used with a custom app.
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async createUser(id, roomUserPayload, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomCreateUser_js_1.roomCreateUser)(this, id, roomUserPayload, options));
    }
    /**
     * Get user details
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async getUser(id, userId, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomGetUser_js_1.roomGetUser)(this, id, userId, options));
    }
    /**
     * Update a room user
     *
     * @remarks
     * Update properties for a user.
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async updateUser(id, userId, roomUserUpdatePayload, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomUpdateUser_js_1.roomUpdateUser)(this, id, userId, roomUserUpdatePayload, options));
    }
    /**
     * Remove a user from the room
     *
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    async deleteUser(id, userId, options) {
        return (0, fp_js_1.unwrapAsync)((0, roomDeleteUser_js_1.roomDeleteUser)(this, id, userId, options));
    }
}
exports.Room = Room;
//# sourceMappingURL=room.js.map