import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
export declare class Multistream extends ClientSDK {
    /**
     * Retrieve Multistream Targets
     */
    getAll(options?: RequestOptions): Promise<operations.GetMultistreamTargetsResponse>;
    /**
     * Create a multistream target
     */
    create(request: components.MultistreamTargetInput, options?: RequestOptions): Promise<operations.CreateMultistreamTargetResponse>;
    /**
     * Retrieve a multistream target
     */
    get(id: string, options?: RequestOptions): Promise<operations.GetMultistreamTargetResponse>;
    /**
     * Update Multistream Target
     */
    update(id: string, multistreamTargetPatchPayload: components.MultistreamTargetPatchPayload, options?: RequestOptions): Promise<operations.UpdateMultistreamTargetResponse>;
    /**
     * Delete a multistream target
     *
     * @remarks
     * Make sure to remove any references to the target on existing
     * streams before actually deleting it from the API.
     */
    delete(id: string, options?: RequestOptions): Promise<operations.DeleteMultistreamTargetResponse>;
}
//# sourceMappingURL=multistream.d.ts.map