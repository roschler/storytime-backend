"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Generate = void 0;
const generateAudioToText_js_1 = require("../funcs/generateAudioToText.js");
const generateImageToImage_js_1 = require("../funcs/generateImageToImage.js");
const generateImageToVideo_js_1 = require("../funcs/generateImageToVideo.js");
const generateSegmentAnything2_js_1 = require("../funcs/generateSegmentAnything2.js");
const generateTextToImage_js_1 = require("../funcs/generateTextToImage.js");
const generateUpscale_js_1 = require("../funcs/generateUpscale.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Generate extends sdks_js_1.ClientSDK {
    /**
     * Text To Image
     *
     * @remarks
     * Generate images from text prompts.
     */
    async textToImage(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateTextToImage_js_1.generateTextToImage)(this, request, options));
    }
    /**
     * Image To Image
     *
     * @remarks
     * Apply image transformations to a provided image.
     */
    async imageToImage(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateImageToImage_js_1.generateImageToImage)(this, request, options));
    }
    /**
     * Image To Video
     *
     * @remarks
     * Generate a video from a provided image.
     */
    async imageToVideo(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateImageToVideo_js_1.generateImageToVideo)(this, request, options));
    }
    /**
     * Upscale
     *
     * @remarks
     * Upscale an image by increasing its resolution.
     */
    async upscale(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateUpscale_js_1.generateUpscale)(this, request, options));
    }
    /**
     * Audio To Text
     *
     * @remarks
     * Transcribe audio files to text.
     */
    async audioToText(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateAudioToText_js_1.generateAudioToText)(this, request, options));
    }
    /**
     * Segment Anything 2
     *
     * @remarks
     * Segment objects in an image.
     */
    async segmentAnything2(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateSegmentAnything2_js_1.generateSegmentAnything2)(this, request, options));
    }
}
exports.Generate = Generate;
//# sourceMappingURL=generate.js.map