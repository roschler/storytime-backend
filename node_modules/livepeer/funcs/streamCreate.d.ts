import { LivepeerCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
/**
 * Create a stream
 *
 * @remarks
 * The only parameter you are required to set is the name of your stream,
 * but we also highly recommend that you define transcoding profiles
 * parameter that suits your specific broadcasting configuration.
 * \
 * \
 * If you do not define transcoding rendition profiles when creating the
 * stream, a default set of profiles will be used. These profiles include
 * 240p,  360p, 480p and 720p.
 * \
 * \
 * The playback policy is set to public by default for new streams. It can
 * also be added upon the creation of a new stream by adding
 * `"playbackPolicy": {"type": "jwt"}`
 */
export declare function streamCreate(client$: LivepeerCore, request: components.NewStreamPayload, options?: RequestOptions): Promise<Result<operations.CreateStreamResponse, SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=streamCreate.d.ts.map