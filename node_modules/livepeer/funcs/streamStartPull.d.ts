import { LivepeerCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
/**
 * Start ingest for a pull stream
 *
 * @remarks
 * `POST /stream/{id}/start-pull` can be used to start ingest for a stream
 * configured with a pull source. If the stream has recording configured,
 * it will also start recording.
 * \
 * \
 * A 204 No Content status response indicates the stream was successfully
 * started.
 */
export declare function streamStartPull(client$: LivepeerCore, id: string, options?: RequestOptions): Promise<Result<operations.StartPullStreamResponse, SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=streamStartPull.d.ts.map