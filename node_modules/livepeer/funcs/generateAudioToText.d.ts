import { LivepeerCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import * as errors from "../models/errors/index.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
/**
 * Audio To Text
 *
 * @remarks
 * Transcribe audio files to text.
 */
export declare function generateAudioToText(client$: LivepeerCore, request: components.BodyGenAudioToText, options?: RequestOptions): Promise<Result<operations.GenAudioToTextResponse, errors.GenAudioToTextResponseBody | errors.GenAudioToTextGenerateResponseBody | errors.GenAudioToTextGenerateResponseResponseBody | errors.GenAudioToTextGenerateResponse422ResponseBody | errors.GenAudioToTextGenerateResponse500ResponseBody | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=generateAudioToText.d.ts.map