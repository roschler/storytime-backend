// Todo list and general notes.

REMEMBER!: tsconfig.json has sections that control the approved image download URLs!  We will need to add our AWS S3 bucket to this list.

NEEDED INFRASTRUCTURE:

    - Maintain per-session array:

        * Array of user/llm texts detail objects:

         {
            role: [user | system ],
            text_said: string,
            decorator_object: [user object | null]
         }

    - Maintain a log file with the session ID as name.  Append
        each object like that above as it is created during
        a session.

NEEDED FROM LLM:

    INTENT DETECTORS:

        - TEXT_ON_IMAGE: User prompt indicates text wanted on
            image (Need to set a flag once that is detected to
            affect future generations.

        - USER_COMPLAINT_IMAGE_QUALITY: User has made an image
            quality complaint. Return suggested model/parameter
            change(s).

        _ BRAINSTORMING: Create suggestions for possible images,
            using previous inputs as guides.

    * The actual image generation text prompt to send to Livepeer for image generation and to be forwarded to the client front-end for display

    * Suggestions for changes to
        - The current image generation model
        - The CFG parameter
        - The steps parameter

    * The reply to the user:

        BRAINSTORMING mode:
        REFINE mode:

    * An explanation of any changes made to (what and why):

        - The current image generation model
        - The CFG parameter
        - The steps parameter

    NEXT: Implement above and implement the code that reacts to model
     or parameter change suggestions from the LLM.

    * Create log file of full session with user.  Assign a per session ID
     to a thread.  Implement the logging.  Write the session interaction
     to a text file.

- NEXT: Where and when do we actually make an image request?  The Chatbot
 app flow is more complicated than the Storytime app.  Call handleImageRequest()
 once that is determined.

- Lower stable diffusion steps during BRAINSTORM mode and higher in REFINE mode.
- Add the general negative prompts from storytime repo
- Use sharp NPM package to optimize images before returning them to the client
- Copy the optimized images to our S3 bucket
- Use S3 bucket URLs for NFT asset URLs.
- Create Amazon S3 bucket for generated images for the contest.  Later we can use a decentralized solution.
-